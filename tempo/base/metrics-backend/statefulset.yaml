apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &app prometheus
  annotations:
    "app.uw.systems/description": "Stores high-cardinality metrics for Tempo metrics-generator"
    "app.uw.systems/tier": "tier_3"
    "app.uw.systems/tags.oss": "true"
    "app.uw.systems/repos.prometheus": "https://github.com/prometheus/prometheus"
spec:
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      app: *app
  serviceName: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      terminationGracePeriodSeconds: 1200
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: *app
            topologyKey: kubernetes.io/hostname
      containers:
        - name: prometheus
          image: prometheus
          args:
            - --log.level=warn
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus
            # populated from env, required for consumers of this base
            - --storage.tsdb.retention.time=$(PROM_RETENTION_TIME)
            - --web.enable-remote-write-receiver
            - --enable-feature=exemplar-storage
          resources:
            requests:
              cpu: 1
              memory: 500Mi
            limits:
              cpu: 3
              memory: 2Gi
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: web
              scheme: HTTP
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: web
              scheme: HTTP
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - name: web
              containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: datadir
              mountPath: /prometheus
      securityContext:
        runAsUser: 0
      volumes:
        - name: config-volume
          configMap:
            defaultMode: 420
            name: prometheus
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: datadir
        labels:
          app: *app
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
